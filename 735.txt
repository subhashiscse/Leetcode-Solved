class Solution {
public:
    vector<int> asteroidCollision(vector<int>& asteroids) {
       stack<int>st;
        for(int i=0;i<asteroids.size();i++){
            int flag=0;
            while(!st.empty() && st.top()>0 && asteroids[i]<0){   /// stack not empty
                                                                 /// stack top value is positive and 
                                                                 ///current array value is negative
                if(st.top()>abs(asteroids[i])){
                    flag=1;
                    break;
                } else if(st.top()<abs(asteroids[i])){
                    st.pop();
                } else if(st.top()==abs(asteroids[i])){
                    flag=1;
                    st.pop();
                    break;
                }
            }
            if(flag==0){
                st.push(asteroids[i]);
            }
        }
        vector<int>ans;
        while(!st.empty()){
            ans.push_back(st.top());
            st.pop();
        }
        reverse(ans.begin(), ans.end());
        return ans;
    }
};

/*
TC: O(n);
SC: O(n);
*/